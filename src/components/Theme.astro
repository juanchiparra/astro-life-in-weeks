---
const { theme = "dark" } = Astro.props;
const themes = [
    "dark",
    "light",
    "dracula",
    "atom-dark",
    "gruvbox-dark",
    "gruvbox-light",
    "tokyo-night",
    "a11y-dark",
    "prism-okaidia",
    "xcode-light",
    "night-owl",
    "nord",
    "github-dark",
];
---

<div class="theme-selector">
    <label for="theme-select">Choose a style </label>
    <select id="theme-select" style="margin-left: 0.5rem;">
        {
            themes.map((t) => (
                <option value={t} selected={t === theme}>
                    {t}
                </option>
            ))
        }
    </select>
</div>

<script>
    const select = document.getElementById("theme-select");
    const selectedTheme = "life-in-weeks:theme";

    function setTheme(theme: string) {
        document.body.className = "";
        document.body.classList.add(`theme-${theme}`);
        try {
            localStorage.setItem(selectedTheme, theme);
        } catch {}
    }

    const saved = (() => {
        try {
            return localStorage.getItem(selectedTheme);
        } catch {
            return null;
        }
    })();

    const initial =
        saved || (select ? (select as HTMLSelectElement).value : "dark");
    if (initial && !document.body.classList.contains(`theme-${initial}`)) {
        setTheme(initial);
        if (select) (select as HTMLSelectElement).value = initial;
    }

    if (select) {
        select.addEventListener("change", (e) => {
            const target = e.target as HTMLSelectElement;
            if (target) setTheme(target.value);
        });
    }
</script>

<style>
    .theme-selector {
        position: absolute;
        top: 2rem;
        right: 2rem;
        display: flex;
        justify-content: flex-end;
        align-items: center;
        background: transparent;
    }

    label {
        color: var(--text);
    }

    select {
        padding: 0.25rem;
        border-radius: 0.25rem;
        background-color: var(--text);
        color: var(--bg);
        margin-left: 0.5rem;
    }

    select:hover {
        border-color: none;
    }

    select:focus {
        outline: none;
        border-color: none;
    }
</style>
